# coding: utf-8

"""
Open-Meteo APIs

Open-Meteo offers free weather forecast APIs for open-source developers and non-commercial use. No API key is required.

The version of the OpenAPI document: 1.0
Contact: info@open-meteo.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from weather.models.hourly_response import HourlyResponse


class TestHourlyResponse(unittest.TestCase):
    """HourlyResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HourlyResponse:
        """Test HourlyResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `HourlyResponse`
        """
        model = HourlyResponse()
        if include_optional:
            return HourlyResponse(
                time = [
                    ''
                    ],
                temperature_2m = [
                    1.337
                    ],
                relative_humidity_2m = [
                    1.337
                    ],
                dew_point_2m = [
                    1.337
                    ],
                apparent_temperature = [
                    1.337
                    ],
                pressure_msl = [
                    1.337
                    ],
                cloud_cover = [
                    1.337
                    ],
                cloud_cover_low = [
                    1.337
                    ],
                cloud_cover_mid = [
                    1.337
                    ],
                cloud_cover_high = [
                    1.337
                    ],
                wind_speed_10m = [
                    1.337
                    ],
                wind_speed_80m = [
                    1.337
                    ],
                wind_speed_120m = [
                    1.337
                    ],
                wind_speed_180m = [
                    1.337
                    ],
                wind_direction_10m = [
                    1.337
                    ],
                wind_direction_80m = [
                    1.337
                    ],
                wind_direction_120m = [
                    1.337
                    ],
                wind_direction_180m = [
                    1.337
                    ],
                wind_gusts_10m = [
                    1.337
                    ],
                shortwave_radiation = [
                    1.337
                    ],
                direct_radiation = [
                    1.337
                    ],
                direct_normal_irradiance = [
                    1.337
                    ],
                diffuse_radiation = [
                    1.337
                    ],
                vapour_pressure_deficit = [
                    1.337
                    ],
                evapotranspiration = [
                    1.337
                    ],
                precipitation = [
                    1.337
                    ],
                weather_code = [
                    1.337
                    ],
                snow_height = [
                    1.337
                    ],
                freezing_level_height = [
                    1.337
                    ],
                soil_temperature_0cm = [
                    1.337
                    ],
                soil_temperature_6cm = [
                    1.337
                    ],
                soil_temperature_18cm = [
                    1.337
                    ],
                soil_temperature_54cm = [
                    1.337
                    ],
                soil_moisture_0_1cm = [
                    1.337
                    ],
                soil_moisture_1_3cm = [
                    1.337
                    ],
                soil_moisture_3_9cm = [
                    1.337
                    ],
                soil_moisture_9_27cm = [
                    1.337
                    ],
                soil_moisture_27_81cm = [
                    1.337
                    ]
            )
        else:
            return HourlyResponse(
                time = [
                    ''
                    ],
        )
        """

    def testHourlyResponse(self):
        """Test HourlyResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
