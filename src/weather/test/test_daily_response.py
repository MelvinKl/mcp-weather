# coding: utf-8

"""
Open-Meteo APIs

Open-Meteo offers free weather forecast APIs for open-source developers and non-commercial use. No API key is required.

The version of the OpenAPI document: 1.0
Contact: info@open-meteo.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from weather.models.daily_response import DailyResponse


class TestDailyResponse(unittest.TestCase):
    """DailyResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DailyResponse:
        """Test DailyResponse
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `DailyResponse`
        """
        model = DailyResponse()
        if include_optional:
            return DailyResponse(
                time = [
                    ''
                    ],
                temperature_2m_max = [
                    1.337
                    ],
                temperature_2m_min = [
                    1.337
                    ],
                apparent_temperature_max = [
                    1.337
                    ],
                apparent_temperature_min = [
                    1.337
                    ],
                precipitation_sum = [
                    1.337
                    ],
                precipitation_hours = [
                    1.337
                    ],
                weather_code = [
                    1.337
                    ],
                sunrise = [
                    1.337
                    ],
                sunset = [
                    1.337
                    ],
                wind_speed_10m_max = [
                    1.337
                    ],
                wind_gusts_10m_max = [
                    1.337
                    ],
                wind_direction_10m_dominant = [
                    1.337
                    ],
                shortwave_radiation_sum = [
                    1.337
                    ],
                uv_index_max = [
                    1.337
                    ],
                uv_index_clear_sky_max = [
                    1.337
                    ],
                et0_fao_evapotranspiration = [
                    1.337
                    ]
            )
        else:
            return DailyResponse(
                time = [
                    ''
                    ],
        )
        """

    def testDailyResponse(self):
        """Test DailyResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
