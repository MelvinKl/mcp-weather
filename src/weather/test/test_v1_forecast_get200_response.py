# coding: utf-8

"""
Open-Meteo APIs

Open-Meteo offers free weather forecast APIs for open-source developers and non-commercial use. No API key is required.

The version of the OpenAPI document: 1.0
Contact: info@open-meteo.com
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501


import unittest

from weather.models.v1_forecast_get200_response import V1ForecastGet200Response


class TestV1ForecastGet200Response(unittest.TestCase):
    """V1ForecastGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1ForecastGet200Response:
        """Test V1ForecastGet200Response
        include_optional is a boolean, when False only required
        params are included, when True both required and
        optional params are included"""
        # uncomment below to create an instance of `V1ForecastGet200Response`
        """
        model = V1ForecastGet200Response()
        if include_optional:
            return V1ForecastGet200Response(
                latitude = 52.52,
                longitude = 1.337,
                elevation = 44.812,
                generationtime_ms = 2.2119,
                utc_offset_seconds = 3600,
                hourly = weather.models.hourly_response.HourlyResponse(
                    time = [
                        ''
                        ], 
                    temperature_2m = [
                        1.337
                        ], 
                    relative_humidity_2m = [
                        1.337
                        ], 
                    dew_point_2m = [
                        1.337
                        ], 
                    apparent_temperature = [
                        1.337
                        ], 
                    pressure_msl = [
                        1.337
                        ], 
                    cloud_cover = [
                        1.337
                        ], 
                    cloud_cover_low = [
                        1.337
                        ], 
                    cloud_cover_mid = [
                        1.337
                        ], 
                    cloud_cover_high = [
                        1.337
                        ], 
                    wind_speed_10m = [
                        1.337
                        ], 
                    wind_speed_80m = [
                        1.337
                        ], 
                    wind_speed_120m = [
                        1.337
                        ], 
                    wind_speed_180m = [
                        1.337
                        ], 
                    wind_direction_10m = [
                        1.337
                        ], 
                    wind_direction_80m = [
                        1.337
                        ], 
                    wind_direction_120m = [
                        1.337
                        ], 
                    wind_direction_180m = [
                        1.337
                        ], 
                    wind_gusts_10m = [
                        1.337
                        ], 
                    shortwave_radiation = [
                        1.337
                        ], 
                    direct_radiation = [
                        1.337
                        ], 
                    direct_normal_irradiance = [
                        1.337
                        ], 
                    diffuse_radiation = [
                        1.337
                        ], 
                    vapour_pressure_deficit = [
                        1.337
                        ], 
                    evapotranspiration = [
                        1.337
                        ], 
                    precipitation = [
                        1.337
                        ], 
                    weather_code = [
                        1.337
                        ], 
                    snow_height = [
                        1.337
                        ], 
                    freezing_level_height = [
                        1.337
                        ], 
                    soil_temperature_0cm = [
                        1.337
                        ], 
                    soil_temperature_6cm = [
                        1.337
                        ], 
                    soil_temperature_18cm = [
                        1.337
                        ], 
                    soil_temperature_54cm = [
                        1.337
                        ], 
                    soil_moisture_0_1cm = [
                        1.337
                        ], 
                    soil_moisture_1_3cm = [
                        1.337
                        ], 
                    soil_moisture_3_9cm = [
                        1.337
                        ], 
                    soil_moisture_9_27cm = [
                        1.337
                        ], 
                    soil_moisture_27_81cm = [
                        1.337
                        ], ),
                hourly_units = {
                    'key' : ''
                    },
                daily = weather.models.daily_response.DailyResponse(
                    time = [
                        ''
                        ], 
                    temperature_2m_max = [
                        1.337
                        ], 
                    temperature_2m_min = [
                        1.337
                        ], 
                    apparent_temperature_max = [
                        1.337
                        ], 
                    apparent_temperature_min = [
                        1.337
                        ], 
                    precipitation_sum = [
                        1.337
                        ], 
                    precipitation_hours = [
                        1.337
                        ], 
                    weather_code = [
                        1.337
                        ], 
                    sunrise = [
                        1.337
                        ], 
                    sunset = [
                        1.337
                        ], 
                    wind_speed_10m_max = [
                        1.337
                        ], 
                    wind_gusts_10m_max = [
                        1.337
                        ], 
                    wind_direction_10m_dominant = [
                        1.337
                        ], 
                    shortwave_radiation_sum = [
                        1.337
                        ], 
                    uv_index_max = [
                        1.337
                        ], 
                    uv_index_clear_sky_max = [
                        1.337
                        ], 
                    et0_fao_evapotranspiration = [
                        1.337
                        ], ),
                daily_units = {
                    'key' : ''
                    },
                current_weather = weather.models.current_weather.CurrentWeather(
                    time = '', 
                    temperature = 1.337, 
                    wind_speed = 1.337, 
                    wind_direction = 1.337, 
                    weather_code = 56, )
            )
        else:
            return V1ForecastGet200Response(
        )
        """

    def testV1ForecastGet200Response(self):
        """Test V1ForecastGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == "__main__":
    unittest.main()
